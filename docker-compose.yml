version: "3.8"

services:
  bgp-looking-glass:
    container_name: bgp-looking-glass
    image: node:20-alpine
    ports:
      - "3090:3090"
    working_dir: /app
    environment:
      - NODE_ENV=production
      - GIT_TERMINAL_PROMPT=0
      - GITHUB_REPO=https://github.com/ljis120301/bgp-looking-glass.git
    restart: unless-stopped
    entrypoint:
      - sh
      - -c
      - |
        echo "=== BGP Looking Glass Startup Log ==="
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Operating system: $(uname -a)"
        echo ""
        
        echo "[STEP 1] Installing dependencies..."
        apk add --no-cache git
        echo "Git installed: $(git --version)"
        echo ""
        
        echo "[STEP 2] Setting up workspace..."
        rm -rf /app/* /app/.[^.]* 2>/dev/null || true
        echo ""
        
        echo "[STEP 3] Cloning repository..."
        cd /tmp
        rm -rf bgp-app 2>/dev/null || true
        git clone $$GITHUB_REPO bgp-app
        if [ $$? -ne 0 ]; then
          echo "ERROR: Failed to clone repository"
          exit 1
        fi
        
        echo "Moving repository to /app..."
        cp -r /tmp/bgp-app/. /app/
        cd /app
        echo "Repository cloned successfully"
        echo ""
        
        echo "[STEP 4] Verifying project structure..."
        if [ -f package.json ]; then
          echo "✓ package.json found"
        else
          echo "ERROR: package.json not found!"
          exit 1
        fi
        
        # Verify component structure
        if [ -f components/BGPLookupTool.tsx ]; then
          echo "✓ BGPLookupTool.tsx found in correct location"
        else
          echo "ERROR: BGPLookupTool.tsx not found in components/"
          exit 1
        fi
        
        # Verify required components exist
        REQUIRED_COMPONENTS="PingTool TracerouteTool dig whois nmap"
        for component in $$REQUIRED_COMPONENTS; do
          if [ -f "components/$$component.tsx" ]; then
            echo "✓ components/$$component.tsx found"
          else
            echo "✗ components/$$component.tsx missing"
          fi
        done
        echo ""
        
        echo "[STEP 5] Installing npm dependencies..."
        npm ci --production=false
        if [ $$? -ne 0 ]; then
          echo "ERROR: npm ci failed, trying npm install..."
          npm install
          if [ $$? -ne 0 ]; then
            echo "ERROR: npm install failed"
            exit 1
          fi
        fi
        echo "Dependencies installed successfully"
        echo ""
        
        echo "[STEP 6] Building application..."
        npm run build
        if [ $$? -ne 0 ]; then
          echo "ERROR: Build failed"
          echo "Checking for common issues..."
          
          # Show detailed error information
          echo "Project structure:"
          find . -name "*.tsx" -o -name "*.ts" -o -name "*.jsx" -o -name "*.js" | grep -v node_modules | sort
          
          echo "Package.json dependencies:"
          cat package.json | grep -A 20 '"dependencies"'
          
          exit 1
        fi
        echo "Build completed successfully"
        echo ""
        
        echo "[STEP 7] Starting application..."
        exec npm start
    labels:
      icon: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/bgp.png
    x-casaos:
      main: bgp-looking-glass
      store_app_id: bgp-looking-glass
      tagline:
        en_us: "BGP Looking Glass - Network Diagnostics Tool"
      description:
        en_us: "A web-based BGP looking glass tool for network diagnostics and route analysis. Automatically pulls the latest code from GitHub and runs in production mode."
      index: /
      scheme: http
      port_map: "3090"
      icon: https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/bgp.png
      screenshot_link:
        - https://raw.githubusercontent.com/ljis120301/bgp-looking-glass/main/public/screenshot.png
      category: Network Tools
      developer: ljis120301
      architectures:
        - amd64
        - arm64
      tips:
        en_us: "The application will automatically pull the latest code from GitHub on each container restart. Access the BGP looking glass at http://your-server-ip:3090. Check container logs for detailed startup information."
